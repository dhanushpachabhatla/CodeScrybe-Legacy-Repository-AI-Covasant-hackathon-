[
  {
    "file": "cloned_repos/Cobol-bank-system\\bankstatement.cbl",
    "chunk_id": 0,
    "language": "COBOL",
    "feature": "File and Data Definition",
    "description": "This section defines the file control, file section, and working-storage section for processing bank statements. It sets up the input file `statement.data` as an indexed file with random access and defines data structures for storing movement details (value, observation, date) and an end-of-file indicator.",
    "inputs": [],
    "outputs": [],
    "dependencies": [],
    "side_effects": [],
    "requirements": [
      "An input file named `statement.data` must exist.",
      "The `statement.data` file must be indexed."
    ],
    "annotations": {
      "comments": null
    },
    "code": "FILE-CONTROL.\n                    SELECT STATEMENT-IN ASSIGN TO 'input/statement.data'\n                    ORGANIZATION IS INDEXED\n                    ACCESS IS RANDOM.\n\n       DATA DIVISION.\n\n       FILE SECTION.\n\n\n       WORKING-STORAGE SECTION.\n       01 WS-MOVEMENT.\n           05 WS-VALUE PIC 9(10)V9(2).\n           05 WS-OBSERVATION PIC A(255).\n           05 WS-DATE PIC A(8).\n       01 WS-EOF PIC A(1) VALUE 'N'.\n\n\n       PROCEDURE DIVISION."
  },
  {
    "file": "cloned_repos/Cobol-bank-system\\bankstatement.cbl",
    "chunk_id": 1,
    "language": "COBOL",
    "feature": "Read Input File",
    "description": "This section opens the `STATEMENT-IN` file for input and reads records from it into the `WS-MOVEMENT` data structure until the end-of-file is reached.  Sets WS-EOF to 'Y' when end of file is detected.",
    "inputs": [
      "STATEMENT-IN file"
    ],
    "outputs": [
      "WS-MOVEMENT variable",
      "WS-EOF variable"
    ],
    "dependencies": [],
    "side_effects": [
      "Reads data from `statement.data`"
    ],
    "requirements": [
      "The `STATEMENT-IN` file must be opened before reading.",
      "`WS-EOF` must be initialized to 'N' before reading.",
      "The format of the file needs to match the definition of WS-MOVEMENT"
    ],
    "annotations": {
      "comments": null
    },
    "code": "STATEMENT-SHOW-PROCEDURE.\n           OPEN INPUT STATEMENT-IN.\n               PERFORM UNTIL WS-EOF = 'Y'\n               READ STATEMENT-IN INTO WS-MOVEMENT\n                    AT END MOVE 'Y' TO WS-EOF"
  },
  {
    "file": "cloned_repos/Cobol-bank-system\\bankstatement.cbl",
    "chunk_id": 2,
    "language": "COBOL",
    "feature": "Display and Termination",
    "description": "This section displays the contents of the `WS-MOVEMENT` variable and terminates the program.",
    "inputs": [
      "WS-MOVEMENT variable"
    ],
    "outputs": [
      "Standard output (console)"
    ],
    "dependencies": [],
    "side_effects": [
      "Displays data on the console.",
      "Terminates the program."
    ],
    "requirements": [],
    "annotations": {
      "comments": null
    },
    "code": "END-PERFORM.\n           DISPLAY WS-MOVEMENT.\n           STOP RUN.\n       END PROGRAM BANK-STATEMENT."
  },
  {
    "file": "cloned_repos/Cobol-bank-system\\bankstatementsave.cbl",
    "chunk_id": 1,
    "language": "COBOL",
    "feature": "Conditional Statement",
    "description": "This is a dangling `END-IF` statement with no corresponding `IF` statement.",
    "inputs": [],
    "outputs": [],
    "dependencies": [],
    "side_effects": [],
    "requirements": [
      "This code is likely incomplete or has an error.  An `IF` statement should precede the `END-IF`"
    ],
    "annotations": {
      "comments": "This is likely part of a larger conditional block."
    },
    "code": "END-IF."
  },
  {
    "file": "cloned_repos/Cobol-bank-system\\bankstatementsave.cbl",
    "chunk_id": 2,
    "language": "COBOL",
    "feature": "Program Termination",
    "description": "This statement terminates the current program execution.",
    "inputs": [],
    "outputs": [],
    "dependencies": [],
    "side_effects": [
      "Terminates program execution."
    ],
    "requirements": [],
    "annotations": {
      "comments": "This is a standard way to terminate a COBOL program."
    },
    "code": "goback."
  },
  {
    "file": "cloned_repos/Cobol-bank-system\\main.cob",
    "chunk_id": 1,
    "language": "COBOL",
    "feature": "File Closing and Program Termination",
    "description": "This section closes the `IN-PUT` file and terminates the program.",
    "inputs": [],
    "outputs": [],
    "dependencies": [],
    "side_effects": [
      "Closes the `IN-PUT` file.",
      "Terminates the program."
    ],
    "requirements": [
      "`IN-PUT` must be open before closing."
    ],
    "annotations": {
      "comments": null
    },
    "code": "END-PERFORM.\n           CLOSE IN-PUT.\n           STOP RUN."
  },
  {
    "file": "cloned_repos/Cobol-bank-system\\people.cob",
    "chunk_id": 1,
    "language": "COBOL",
    "feature": "File Closing",
    "description": "This section closes the `PEOPLE-IN` file.",
    "inputs": [],
    "outputs": [],
    "dependencies": [],
    "side_effects": [
      "Closes the `PEOPLE-IN` file."
    ],
    "requirements": [
      "`PEOPLE-IN` must be open before closing."
    ],
    "annotations": {
      "comments": null
    },
    "code": "END-PERFORM.\n           CLOSE PEOPLE-IN."
  },
  {
    "file": "cloned_repos/Cobol-bank-system\\people.cob",
    "chunk_id": 2,
    "language": "COBOL",
    "feature": "Program Termination",
    "description": "This statement terminates the current program execution.",
    "inputs": [],
    "outputs": [],
    "dependencies": [],
    "side_effects": [
      "Terminates program execution."
    ],
    "requirements": [],
    "annotations": {
      "comments": "This is a standard way to terminate a COBOL program."
    },
    "code": "goback."
  },
  {
    "file": "cloned_repos/Cobol-bank-system\\peopleget.cbl",
    "chunk_id": 1,
    "language": "COBOL",
    "feature": "Data Retrieval and File Handling",
    "description": "This section closes `IN-PUT`, displays `WS-CPF`, opens `PEOPLE-RW` in I-O mode, reads a record based on `WS-CPF`, sets `WS-EXSIST` based on whether the record exists, closes `PEOPLE-RW`, displays `WS-EXSIST`, opens `EXISTS-RW` in EXTEND mode, writes `WS-EXSIST` to `EXISTS-RW-ERROR`, and writes a record to `EXISTS-RW-FILE`.",
    "inputs": [
      "IN-PUT file",
      "WS-CPF",
      "PEOPLE-RW file"
    ],
    "outputs": [
      "WS-EXSIST",
      "EXISTS-RW-FILE"
    ],
    "dependencies": [],
    "side_effects": [
      "Closes `IN-PUT` file",
      "Reads data from `PEOPLE-RW` file",
      "Writes data to `EXISTS-RW-FILE`",
      "Displays data on the console."
    ],
    "requirements": [
      "`IN-PUT` must be open before closing.",
      "`PEOPLE-RW` file must be defined with an appropriate key (`PEOPLE-RW-CPF`).",
      "`EXISTS-RW` must be defined as an external file."
    ],
    "annotations": {
      "comments": "This code performs a lookup in the PEOPLE-RW file and saves a flag indicating existence in another file."
    },
    "code": "END-PERFORM.\n           CLOSE IN-PUT.\n           DISPLAY WS-CPF\n           OPEN I-O PEOPLE-RW\n               MOVE WS-CPF TO PEOPLE-RW-CPF\n               READ PEOPLE-RW\n                   KEY IS PEOPLE-RW-CPF\n                   INVALID KEY MOVE \"0\" TO WS-EXSIST\n                   NOT INVALID KEY MOVE \"1\" TO WS-EXSIST\n               END-READ\n           CLOSE PEOPLE-RW.\n           DISPLAY WS-EXSIST\n           OPEN EXTEND EXISTS-RW.\n               MOVE WS-EXSIST TO EXISTS-RW-ERROR\n               WRITE EXISTS-RW-FILE"
  },
  {
    "file": "cloned_repos/Cobol-bank-system\\peopleget.cbl",
    "chunk_id": 2,
    "language": "COBOL",
    "feature": "File Closing",
    "description": "This section closes the `EXISTS-RW` file.",
    "inputs": [],
    "outputs": [],
    "dependencies": [],
    "side_effects": [
      "Closes the `EXISTS-RW` file."
    ],
    "requirements": [
      "`EXISTS-RW` must be open before closing."
    ],
    "annotations": {
      "comments": null
    },
    "code": "END-WRITE.\n           CLOSE EXISTS-RW."
  },
  {
    "file": "cloned_repos/Cobol-bank-system\\peopleget.cbl",
    "chunk_id": 3,
    "language": "COBOL",
    "feature": "Program Termination",
    "description": "This statement terminates the current program execution.",
    "inputs": [],
    "outputs": [],
    "dependencies": [],
    "side_effects": [
      "Terminates program execution."
    ],
    "requirements": [],
    "annotations": {
      "comments": "This is a standard way to terminate a COBOL program."
    },
    "code": "goback."
  },
  {
    "file": "cloned_repos/Cobol-bank-system\\peopleLogin.cbl",
    "chunk_id": 1,
    "language": "COBOL",
    "feature": "Login Validation and File Handling",
    "description": "This section closes `IN-PUT`, displays `WS-CPF`, opens `PEOPLE-RW` in I-O mode, reads a record into `WS-PEOPLE-FILE-IN` based on `WS-CPF`, sets `WS-EXSIST` based on whether the record exists, closes `PEOPLE-RW`, displays `WS-EXSIST`, opens `EXISTS-RW` in EXTEND mode, writes `WS-EXSIST` to `EXISTS-RW-ERROR`, and writes a record to `EXISTS-RW-FILE`.",
    "inputs": [
      "IN-PUT file",
      "WS-CPF",
      "PEOPLE-RW file"
    ],
    "outputs": [
      "WS-EXSIST",
      "EXISTS-RW-FILE"
    ],
    "dependencies": [],
    "side_effects": [
      "Closes `IN-PUT` file",
      "Reads data from `PEOPLE-RW` file",
      "Writes data to `EXISTS-RW-FILE`",
      "Displays data on the console."
    ],
    "requirements": [
      "`IN-PUT` must be open before closing.",
      "`PEOPLE-RW` file must be defined with an appropriate key (`PEOPLE-RW-CPF`).",
      "`EXISTS-RW` must be defined as an external file.",
      "WS-PEOPLE-FILE-IN needs to be defined in the data division and be of the correct format to store a record from PEOPLE-RW."
    ],
    "annotations": {
      "comments": "This code performs a login check by looking up a record in the PEOPLE-RW file and saving the existence status to a separate file."
    },
    "code": "END-PERFORM.\n           CLOSE IN-PUT.\n           DISPLAY WS-CPF\n           OPEN I-O PEOPLE-RW\n               MOVE WS-CPF TO PEOPLE-RW-CPF\n               READ PEOPLE-RW INTO WS-PEOPLE-FILE-IN\n                   KEY IS PEOPLE-RW-CPF\n                   INVALID KEY MOVE \"0\" TO WS-EXSIST\n                   NOT INVALID KEY\n                   MOVE \"1\" TO WS-EXSIST\n               END-READ\n           CLOSE PEOPLE-RW.\n           DISPLAY WS-EXSIST\n           OPEN EXTEND EXISTS-RW.\n               MOVE WS-EXSIST TO EXISTS-RW-ERROR\n               WRITE EXISTS-RW-FILE"
  },
  {
    "file": "cloned_repos/Cobol-bank-system\\peopleLogin.cbl",
    "chunk_id": 2,
    "language": "COBOL",
    "feature": "File Closing",
    "description": "This section closes the `EXISTS-RW` file.",
    "inputs": [],
    "outputs": [],
    "dependencies": [],
    "side_effects": [
      "Closes the `EXISTS-RW` file."
    ],
    "requirements": [
      "`EXISTS-RW` must be open before closing."
    ],
    "annotations": {
      "comments": null
    },
    "code": "END-WRITE.\n           CLOSE EXISTS-RW."
  },
  {
    "file": "cloned_repos/Cobol-bank-system\\peopleLogin.cbl",
    "chunk_id": 3,
    "language": "COBOL",
    "feature": "Program Termination",
    "description": "This statement terminates the current program execution.",
    "inputs": [],
    "outputs": [],
    "dependencies": [],
    "side_effects": [
      "Terminates program execution."
    ],
    "requirements": [],
    "annotations": {
      "comments": "This is a standard way to terminate a COBOL program."
    },
    "code": "goback."
  },
  {
    "file": "cloned_repos/Cobol-bank-system\\peopleName.cbl",
    "chunk_id": 1,
    "language": "COBOL",
    "feature": "Name Retrieval and File Handling",
    "description": "This section closes `IN-PUT`, displays `WS-CPF`, opens `PEOPLE-RW` in I-O mode, reads a record into `WS-PEOPLE-FILE-IN` based on `WS-CPF`, sets `WS-Nome` to either blank if invalid key or WS-PEOPLE-FILE-IN-NAME if found, closes `PEOPLE-RW`, displays `WS-Nome`, opens `EXISTS-RW` in EXTEND mode, writes `WS-Nome` to `EXISTS-RW-NAME`, and writes a record to `EXISTS-RW-FILE`.",
    "inputs": [
      "IN-PUT file",
      "WS-CPF",
      "PEOPLE-RW file"
    ],
    "outputs": [
      "WS-Nome",
      "EXISTS-RW-FILE"
    ],
    "dependencies": [],
    "side_effects": [
      "Closes `IN-PUT` file",
      "Reads data from `PEOPLE-RW` file",
      "Writes data to `EXISTS-RW-FILE`",
      "Displays data on the console."
    ],
    "requirements": [
      "`IN-PUT` must be open before closing.",
      "`PEOPLE-RW` file must be defined with an appropriate key (`PEOPLE-RW-CPF`).",
      "`EXISTS-RW` must be defined as an external file.",
      "WS-PEOPLE-FILE-IN needs to be defined in the data division and be of the correct format to store a record from PEOPLE-RW.",
      "WS-PEOPLE-FILE-IN-NAME needs to be a valid field within the WS-PEOPLE-FILE-IN record definition."
    ],
    "annotations": {
      "comments": "This code retrieves a person's name based on CPF, storing an empty string if the record is not found and saves the result to a file."
    },
    "code": "END-PERFORM.\n           CLOSE IN-PUT.\n           DISPLAY WS-CPF\n           OPEN I-O PEOPLE-RW\n               MOVE WS-CPF TO PEOPLE-RW-CPF\n               READ PEOPLE-RW into WS-PEOPLE-FILE-IN\n                   KEY IS PEOPLE-RW-CPF\n                   INVALID KEY MOVE \"\" TO WS-Nome\n                  NOT INVALID KEY MOVE WS-PEOPLE-FILE-IN-NAME TO WS-Nome\n               END-READ\n           CLOSE PEOPLE-RW.\n           DISPLAY WS-Nome\n           OPEN EXTEND EXISTS-RW.\n               MOVE WS-Nome TO EXISTS-RW-NAME\n               WRITE EXISTS-RW-FILE"
  },
  {
    "file": "cloned_repos/Cobol-bank-system\\peopleName.cbl",
    "chunk_id": 2,
    "language": "COBOL",
    "feature": "File Closing",
    "description": "This section closes the `EXISTS-RW` file.",
    "inputs": [],
    "outputs": [],
    "dependencies": [],
    "side_effects": [
      "Closes the `EXISTS-RW` file."
    ],
    "requirements": [
      "`EXISTS-RW` must be open before closing."
    ],
    "annotations": {
      "comments": null
    },
    "code": "END-WRITE.\n           CLOSE EXISTS-RW."
  },
  {
    "file": "cloned_repos/Cobol-bank-system\\peopleName.cbl",
    "chunk_id": 3,
    "language": "COBOL",
    "feature": "Program Termination",
    "description": "This statement terminates the current program execution.",
    "inputs": [],
    "outputs": [],
    "dependencies": [],
    "side_effects": [
      "Terminates program execution."
    ],
    "requirements": [],
    "annotations": {
      "comments": "This is a standard way to terminate a COBOL program."
    },
    "code": "goback."
  },
  {
    "file": "cloned_repos/Cobol-bank-system\\peoplesave.cob",
    "chunk_id": 1,
    "language": "COBOL",
    "feature": "Program Termination",
    "description": "This statement terminates the current program execution.",
    "inputs": [],
    "outputs": [],
    "dependencies": [],
    "side_effects": [
      "Terminates program execution."
    ],
    "requirements": [],
    "annotations": {
      "comments": "This is a standard way to terminate a COBOL program."
    },
    "code": "goback."
  }
  
]