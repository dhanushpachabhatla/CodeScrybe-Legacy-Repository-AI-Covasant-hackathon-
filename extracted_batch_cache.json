{
  "batch_0": [
    {
      "file": "cloned_repos/Cobol-bank-system\\bankstatement.cbl",
      "chunk_id": 0,
      "language": "COBOL",
      "feature": "File and Data Definition",
      "description": "Defines the file control for the bank statement input file, specifies the organization as indexed with random access, and defines the data structures used for reading the bank statement data. It also defines a working storage variable to indicate the end-of-file condition.",
      "inputs": [],
      "outputs": [],
      "dependencies": [],
      "side_effects": [],
      "requirements": [],
      "annotations": {
        "comments": "Declares the input file, data structures, and end-of-file indicator."
      },
      "code": "FILE-CONTROL.\n                    SELECT STATEMENT-IN ASSIGN TO 'input/statement.data'\n                    ORGANIZATION IS INDEXED\n                    ACCESS IS RANDOM.\n\n       DATA DIVISION.\n\n       FILE SECTION.\n\n\n       WORKING-STORAGE SECTION.\n       01 WS-MOVEMENT.\n           05 WS-VALUE PIC 9(10)V9(2).\n           05 WS-OBSERVATION PIC A(255).\n           05 WS-DATE PIC A(8).\n       01 WS-EOF PIC A(1) VALUE 'N'.\n\n\n       PROCEDURE DIVISION."
    },
    {
      "file": "cloned_repos/Cobol-bank-system\\bankstatement.cbl",
      "chunk_id": 1,
      "language": "COBOL",
      "feature": "Read Bank Statement",
      "description": "Opens the bank statement input file and reads records from it until the end of the file is reached. Each record is read into the WS-MOVEMENT working storage variable.",
      "inputs": [
        "STATEMENT-IN"
      ],
      "outputs": [
        "WS-MOVEMENT",
        "WS-EOF"
      ],
      "dependencies": [
        "STATEMENT-IN file definition",
        "WS-MOVEMENT data structure",
        "WS-EOF variable"
      ],
      "side_effects": [
        "Reads records from the STATEMENT-IN file",
        "Updates the WS-EOF variable when the end of the file is reached"
      ],
      "requirements": [
        "STATEMENT-IN file must be available and accessible.",
        "The file must contain valid bank statement data in the format expected by WS-MOVEMENT."
      ],
      "annotations": {
        "comments": "Reads the bank statement file record by record."
      },
      "code": "STATEMENT-SHOW-PROCEDURE.\n           OPEN INPUT STATEMENT-IN.\n               PERFORM UNTIL WS-EOF = 'Y'\n               READ STATEMENT-IN INTO WS-MOVEMENT\n                    AT END MOVE 'Y' TO WS-EOF"
    },
    {
      "file": "cloned_repos/Cobol-bank-system\\bankstatement.cbl",
      "chunk_id": 2,
      "language": "COBOL",
      "feature": "Display and Termination",
      "description": "Displays the contents of the WS-MOVEMENT variable (presumably the last record read) and terminates the program.",
      "inputs": [
        "WS-MOVEMENT"
      ],
      "outputs": [
        "Console output of WS-MOVEMENT"
      ],
      "dependencies": [
        "WS-MOVEMENT variable"
      ],
      "side_effects": [
        "Displays data to the console",
        "Terminates the program"
      ],
      "requirements": [],
      "annotations": {
        "comments": "Displays the last bank statement record and terminates the program."
      },
      "code": "END-PERFORM.\n           DISPLAY WS-MOVEMENT.\n           STOP RUN.\n       END PROGRAM BANK-STATEMENT."
    },
    {
      "file": "cloned_repos/Cobol-bank-system\\bankstatementsave.cbl",
      "chunk_id": 1,
      "language": "COBOL",
      "feature": "Conditional Logic (Incomplete)",
      "description": "This chunk represents an incomplete IF statement.  It likely contains a conditional check, but the content of the `IF` or `ELSE` block is missing.",
      "inputs": [],
      "outputs": [],
      "dependencies": [],
      "side_effects": [],
      "requirements": [],
      "annotations": {
        "comments": "Incomplete IF statement."
      },
      "code": "END-IF."
    },
    {
      "file": "cloned_repos/Cobol-bank-system\\bankstatementsave.cbl",
      "chunk_id": 2,
      "language": "COBOL",
      "feature": "Program Termination",
      "description": "Terminates the current program or subroutine.",
      "inputs": [],
      "outputs": [],
      "dependencies": [],
      "side_effects": [
        "Returns control to the calling program."
      ],
      "requirements": [],
      "annotations": {
        "comments": "Exits the current program."
      },
      "code": "goback."
    },
    {
      "file": "cloned_repos/Cobol-bank-system\\main.cob",
      "chunk_id": 1,
      "language": "COBOL",
      "feature": "File Closing and Program Termination",
      "description": "Closes the 'IN-PUT' file and terminates the program.",
      "inputs": [
        "IN-PUT file"
      ],
      "outputs": [],
      "dependencies": [
        "IN-PUT file"
      ],
      "side_effects": [
        "Closes the 'IN-PUT' file.",
        "Terminates the program."
      ],
      "requirements": [],
      "annotations": {
        "comments": "Closes the input file and ends the program execution."
      },
      "code": "END-PERFORM.\n           CLOSE IN-PUT.\n           STOP RUN."
    },
    {
      "file": "cloned_repos/Cobol-bank-system\\people.cob",
      "chunk_id": 1,
      "language": "COBOL",
      "feature": "File Closing",
      "description": "Closes the 'PEOPLE-IN' file after a PERFORM loop.",
      "inputs": [
        "PEOPLE-IN file"
      ],
      "outputs": [],
      "dependencies": [
        "PEOPLE-IN file"
      ],
      "side_effects": [
        "Closes the 'PEOPLE-IN' file."
      ],
      "requirements": [],
      "annotations": {
        "comments": "Closes the PEOPLE-IN file"
      },
      "code": "END-PERFORM.\n           CLOSE PEOPLE-IN."
    },
    {
      "file": "cloned_repos/Cobol-bank-system\\people.cob",
      "chunk_id": 2,
      "language": "COBOL",
      "feature": "Program Termination",
      "description": "Terminates the current program or subroutine.",
      "inputs": [],
      "outputs": [],
      "dependencies": [],
      "side_effects": [
        "Returns control to the calling program."
      ],
      "requirements": [],
      "annotations": {
        "comments": "Exits the current program."
      },
      "code": "goback."
    },
    {
      "file": "cloned_repos/Cobol-bank-system\\peopleget.cbl",
      "chunk_id": 1,
      "language": "COBOL",
      "feature": "People Record Retrieval and Existence Check",
      "description": "This code segment reads a CPF (Brazilian Taxpayer Registry Number) from an input file, displays it, then attempts to read a corresponding record from the PEOPLE-RW file. It checks if the record exists and sets the WS-EXSIST flag accordingly. Finally, it writes the value of WS-EXSIST to the EXISTS-RW file.",
      "inputs": [
        "IN-PUT file (containing CPF)",
        "PEOPLE-RW file (indexed by CPF)",
        "EXISTS-RW file"
      ],
      "outputs": [
        "Console output of WS-CPF",
        "Console output of WS-EXSIST",
        "EXISTS-RW file (updated with WS-EXSIST)"
      ],
      "dependencies": [
        "IN-PUT file structure",
        "PEOPLE-RW file structure and indexing by PEOPLE-RW-CPF",
        "EXISTS-RW file structure",
        "WS-CPF variable",
        "WS-EXSIST variable",
        "PEOPLE-RW-CPF variable",
        "EXISTS-RW-ERROR variable",
        "EXISTS-RW-FILE variable"
      ],
      "side_effects": [
        "Reads CPF from IN-PUT file.",
        "Displays CPF to console.",
        "Reads PEOPLE-RW file based on CPF.",
        "Sets WS-EXSIST flag based on record existence.",
        "Displays WS-EXSIST to console.",
        "Writes WS-EXSIST to EXISTS-RW file.",
        "Potentially updates EXISTS-RW file."
      ],
      "requirements": [
        "IN-PUT file must contain a valid CPF.",
        "PEOPLE-RW file must be properly indexed by CPF.",
        "EXISTS-RW file must be available for writing."
      ],
      "annotations": {
        "comments": "Retrieves a people record based on CPF and checks for existence, writing the result to another file."
      },
      "code": "END-PERFORM.\n           CLOSE IN-PUT.\n           DISPLAY WS-CPF\n           OPEN I-O PEOPLE-RW\n               MOVE WS-CPF TO PEOPLE-RW-CPF\n               READ PEOPLE-RW\n                   KEY IS PEOPLE-RW-CPF\n                   INVALID KEY MOVE \"0\" TO WS-EXSIST\n                   NOT INVALID KEY MOVE \"1\" TO WS-EXSIST\n               END-READ\n           CLOSE PEOPLE-RW.\n           DISPLAY WS-EXSIST\n           OPEN EXTEND EXISTS-RW.\n               MOVE WS-EXSIST TO EXISTS-RW-ERROR\n               WRITE EXISTS-RW-FILE"
    },
    {
      "file": "cloned_repos/Cobol-bank-system\\peopleget.cbl",
      "chunk_id": 2,
      "language": "COBOL",
      "feature": "File Closing",
      "description": "Closes the EXISTS-RW file.",
      "inputs": [
        "EXISTS-RW file"
      ],
      "outputs": [],
      "dependencies": [
        "EXISTS-RW file"
      ],
      "side_effects": [
        "Closes the EXISTS-RW file."
      ],
      "requirements": [],
      "annotations": {
        "comments": "Closes the EXISTS-RW file."
      },
      "code": "END-WRITE.\n           CLOSE EXISTS-RW."
    },
    {
      "file": "cloned_repos/Cobol-bank-system\\peopleget.cbl",
      "chunk_id": 3,
      "language": "COBOL",
      "feature": "Program Termination",
      "description": "Terminates the current program or subroutine.",
      "inputs": [],
      "outputs": [],
      "dependencies": [],
      "side_effects": [
        "Returns control to the calling program."
      ],
      "requirements": [],
      "annotations": {
        "comments": "Exits the current program."
      },
      "code": "goback."
    },
    {
      "file": "cloned_repos/Cobol-bank-system\\peopleLogin.cbl",
      "chunk_id": 1,
      "language": "COBOL",
      "feature": "People Login - Record Retrieval and Existence Check",
      "description": "This code reads a CPF from an input file, displays it, then attempts to read a corresponding record from the PEOPLE-RW file, storing the record into WS-PEOPLE-FILE-IN. It checks if the record exists and sets the WS-EXSIST flag accordingly. Finally, it writes the value of WS-EXSIST to the EXISTS-RW file.",
      "inputs": [
        "IN-PUT file (containing CPF)",
        "PEOPLE-RW file (indexed by CPF)",
        "EXISTS-RW file"
      ],
      "outputs": [
        "Console output of WS-CPF",
        "Console output of WS-EXSIST",
        "EXISTS-RW file (updated with WS-EXSIST)"
      ],
      "dependencies": [
        "IN-PUT file structure",
        "PEOPLE-RW file structure and indexing by PEOPLE-RW-CPF",
        "EXISTS-RW file structure",
        "WS-CPF variable",
        "WS-EXSIST variable",
        "PEOPLE-RW-CPF variable",
        "EXISTS-RW-ERROR variable",
        "EXISTS-RW-FILE variable",
        "WS-PEOPLE-FILE-IN variable"
      ],
      "side_effects": [
        "Reads CPF from IN-PUT file.",
        "Displays CPF to console.",
        "Reads PEOPLE-RW file based on CPF.",
        "Sets WS-EXSIST flag based on record existence.",
        "Displays WS-EXSIST to console.",
        "Writes WS-EXSIST to EXISTS-RW file.",
        "Potentially updates EXISTS-RW file."
      ],
      "requirements": [
        "IN-PUT file must contain a valid CPF.",
        "PEOPLE-RW file must be properly indexed by CPF.",
        "EXISTS-RW file must be available for writing."
      ],
      "annotations": {
        "comments": "Retrieves a people record based on CPF for login purposes, checks if it exists, and stores the flag in a file."
      },
      "code": "END-PERFORM.\n           CLOSE IN-PUT.\n           DISPLAY WS-CPF\n           OPEN I-O PEOPLE-RW\n               MOVE WS-CPF TO PEOPLE-RW-CPF\n               READ PEOPLE-RW INTO WS-PEOPLE-FILE-IN\n                   KEY IS PEOPLE-RW-CPF\n                   INVALID KEY MOVE \"0\" TO WS-EXSIST\n                   NOT INVALID KEY\n                   MOVE \"1\" TO WS-EXSIST\n               END-READ\n           CLOSE PEOPLE-RW.\n           DISPLAY WS-EXSIST\n           OPEN EXTEND EXISTS-RW.\n               MOVE WS-EXSIST TO EXISTS-RW-ERROR\n               WRITE EXISTS-RW-FILE"
    },
    {
      "file": "cloned_repos/Cobol-bank-system\\peopleLogin.cbl",
      "chunk_id": 2,
      "language": "COBOL",
      "feature": "File Closing",
      "description": "Closes the EXISTS-RW file.",
      "inputs": [
        "EXISTS-RW file"
      ],
      "outputs": [],
      "dependencies": [
        "EXISTS-RW file"
      ],
      "side_effects": [
        "Closes the EXISTS-RW file."
      ],
      "requirements": [],
      "annotations": {
        "comments": "Closes the EXISTS-RW file."
      },
      "code": "END-WRITE.\n           CLOSE EXISTS-RW."
    },
    {
      "file": "cloned_repos/Cobol-bank-system\\peopleLogin.cbl",
      "chunk_id": 3,
      "language": "COBOL",
      "feature": "Program Termination",
      "description": "Terminates the current program or subroutine.",
      "inputs": [],
      "outputs": [],
      "dependencies": [],
      "side_effects": [
        "Returns control to the calling program."
      ],
      "requirements": [],
      "annotations": {
        "comments": "Exits the current program."
      },
      "code": "goback."
    },
    {
      "file": "cloned_repos/Cobol-bank-system\\peopleName.cbl",
      "chunk_id": 1,
      "language": "COBOL",
      "feature": "People Name Retrieval by CPF",
      "description": "This code segment reads a CPF from an input file, displays it, attempts to retrieve the corresponding record from the PEOPLE-RW file. If the record is found, the person's name is extracted. It writes the person's name or an empty string to the EXISTS-RW file.",
      "inputs": [
        "IN-PUT file (containing CPF)",
        "PEOPLE-RW file (indexed by CPF)",
        "EXISTS-RW file"
      ],
      "outputs": [
        "Console output of WS-CPF",
        "Console output of WS-Nome",
        "EXISTS-RW file (updated with WS-Nome)"
      ],
      "dependencies": [
        "IN-PUT file structure",
        "PEOPLE-RW file structure and indexing by PEOPLE-RW-CPF, including WS-PEOPLE-FILE-IN-NAME",
        "EXISTS-RW file structure",
        "WS-CPF variable",
        "WS-Nome variable",
        "PEOPLE-RW-CPF variable",
        "EXISTS-RW-NAME variable",
        "EXISTS-RW-FILE variable",
        "WS-PEOPLE-FILE-IN variable",
        "WS-PEOPLE-FILE-IN-NAME variable"
      ],
      "side_effects": [
        "Reads CPF from IN-PUT file.",
        "Displays CPF to console.",
        "Reads PEOPLE-RW file based on CPF.",
        "Retrieves the name if the record is found, else sets name to empty string.",
        "Displays the Name.",
        "Writes the Name to EXISTS-RW file.",
        "Potentially updates EXISTS-RW file."
      ],
      "requirements": [
        "IN-PUT file must contain a valid CPF.",
        "PEOPLE-RW file must be properly indexed by CPF and contain a name field.",
        "EXISTS-RW file must be available for writing."
      ],
      "annotations": {
        "comments": "Retrieves a person's name based on CPF and saves it to a file."
      },
      "code": "END-PERFORM.\n           CLOSE IN-PUT.\n           DISPLAY WS-CPF\n           OPEN I-O PEOPLE-RW\n               MOVE WS-CPF TO PEOPLE-RW-CPF\n               READ PEOPLE-RW into WS-PEOPLE-FILE-IN\n                   KEY IS PEOPLE-RW-CPF\n                   INVALID KEY MOVE \"\" TO WS-Nome\n                  NOT INVALID KEY MOVE WS-PEOPLE-FILE-IN-NAME TO WS-Nome\n               END-READ\n           CLOSE PEOPLE-RW.\n           DISPLAY WS-Nome\n           OPEN EXTEND EXISTS-RW.\n               MOVE WS-Nome TO EXISTS-RW-NAME\n               WRITE EXISTS-RW-FILE"
    },
    {
      "file": "cloned_repos/Cobol-bank-system\\peopleName.cbl",
      "chunk_id": 2,
      "language": "COBOL",
      "feature": "File Closing",
      "description": "Closes the EXISTS-RW file.",
      "inputs": [
        "EXISTS-RW file"
      ],
      "outputs": [],
      "dependencies": [
        "EXISTS-RW file"
      ],
      "side_effects": [
        "Closes the EXISTS-RW file."
      ],
      "requirements": [],
      "annotations": {
        "comments": "Closes the EXISTS-RW file."
      },
      "code": "END-WRITE.\n           CLOSE EXISTS-RW."
    },
    {
      "file": "cloned_repos/Cobol-bank-system\\peopleName.cbl",
      "chunk_id": 3,
      "language": "COBOL",
      "feature": "Program Termination",
      "description": "Terminates the current program or subroutine.",
      "inputs": [],
      "outputs": [],
      "dependencies": [],
      "side_effects": [
        "Returns control to the calling program."
      ],
      "requirements": [],
      "annotations": {
        "comments": "Exits the current program."
      },
      "code": "goback."
    },
    {
      "file": "cloned_repos/Cobol-bank-system\\peoplesave.cob",
      "chunk_id": 1,
      "language": "COBOL",
      "feature": "Program Termination",
      "description": "Terminates the current program or subroutine.",
      "inputs": [],
      "outputs": [],
      "dependencies": [],
      "side_effects": [
        "Returns control to the calling program."
      ],
      "requirements": [],
      "annotations": {
        "comments": "Exits the current program."
      },
      "code": "goback."
    }
  ]
}