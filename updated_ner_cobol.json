[
  {
    "file": "cloned_repos/Cobol-bank-system\\bankstatement.cbl",
    "chunk_id": 0,
    "language": "COBOL",
    "feature": "File and Data Definition",
    "description": "Defines the file structure for reading bank statements and the data structures used for storing movement information.",
    "functions": [],
    "classes": [],
    "apis": [],
    "database_tables": [],
    "inputs": [],
    "outputs": [],
    "dependencies": [],
    "side_effects": [],
    "requirements": [
      "File 'input/statement.data' must exist in the specified directory."
    ],
    "comments": [],
    "annotations": {
      "developer_notes": "The file is defined as INDEXED with RANDOM access, suggesting it's designed for reading specific records, although this part of the code only sets up the environment, not the logic."
    },
    "code": "FILE-CONTROL.\n                    SELECT STATEMENT-IN ASSIGN TO 'input/statement.data'\n                    ORGANIZATION IS INDEXED\n                    ACCESS IS RANDOM.\n\n       DATA DIVISION.\n\n       FILE SECTION.\n\n\n       WORKING-STORAGE SECTION.\n       01 WS-MOVEMENT.\n           05 WS-VALUE PIC 9(10)V9(2).\n           05 WS-OBSERVATION PIC A(255).\n           05 WS-DATE PIC A(8).\n       01 WS-EOF PIC A(1) VALUE 'N'.\n\n\n       PROCEDURE DIVISION."
  },
  {
    "file": "cloned_repos/Cobol-bank-system\\bankstatement.cbl",
    "chunk_id": 1,
    "language": "COBOL",
    "feature": "Reading Statement Data",
    "description": "Opens the input file and reads records until the end of file is reached.",
    "functions": [
      {
        "name": "STATEMENT-SHOW-PROCEDURE",
        "signature": "STATEMENT-SHOW-PROCEDURE.",
        "start_line": 1,
        "end_line": 4,
        "class": null
      }
    ],
    "classes": [],
    "apis": [],
    "database_tables": [],
    "inputs": [
      "STATEMENT-IN file"
    ],
    "outputs": [
      "WS-MOVEMENT data structure"
    ],
    "dependencies": [],
    "side_effects": [
      "WS-EOF is modified to 'Y' upon reaching the end of the file."
    ],
    "requirements": [
      "STATEMENT-IN file must be defined prior to calling this procedure."
    ],
    "comments": [],
    "annotations": {
      "developer_notes": "The code reads records from an indexed file using a PERFORM UNTIL loop and an AT END clause to control loop termination."
    },
    "code": "STATEMENT-SHOW-PROCEDURE.\n           OPEN INPUT STATEMENT-IN.\n               PERFORM UNTIL WS-EOF = 'Y'\n               READ STATEMENT-IN INTO WS-MOVEMENT\n                    AT END MOVE 'Y' TO WS-EOF"
  },
  {
    "file": "cloned_repos/Cobol-bank-system\\bankstatement.cbl",
    "chunk_id": 2,
    "language": "COBOL",
    "feature": "Displaying Statement Data and Program Termination",
    "description": "Displays the read movement data and terminates the program.",
    "functions": [],
    "classes": [],
    "apis": [],
    "database_tables": [],
    "inputs": [
      "WS-MOVEMENT"
    ],
    "outputs": [
      "Displayed WS-MOVEMENT data"
    ],
    "dependencies": [],
    "side_effects": [
      "Program termination"
    ],
    "requirements": [
      "WS-MOVEMENT must have data to be displayed."
    ],
    "comments": [],
    "annotations": {
      "developer_notes": "This is the final part of the program. It displays the movement data and then stops the execution."
    },
    "code": "END-PERFORM.\n           DISPLAY WS-MOVEMENT.\n           STOP RUN.\n       END PROGRAM BANK-STATEMENT."
  },
  {
    "file": "cloned_repos/Cobol-bank-system\\bankstatementsave.cbl",
    "chunk_id": 1,
    "language": "COBOL",
    "feature": "Conditional Branching",
    "description": "End of an IF statement.",
    "functions": [],
    "classes": [],
    "apis": [],
    "database_tables": [],
    "inputs": [],
    "outputs": [],
    "dependencies": [],
    "side_effects": [],
    "requirements": [],
    "comments": [],
    "annotations": {
      "developer_notes": "This is simply an END-IF statement, closing a previously opened IF block. It doesn't perform any specific action on its own."
    },
    "code": "END-IF."
  },
  {
    "file": "cloned_repos/Cobol-bank-system\\bankstatementsave.cbl",
    "chunk_id": 2,
    "language": "COBOL",
    "feature": "Program Termination",
    "description": "Returns control to the calling program or the operating system.",
    "functions": [],
    "classes": [],
    "apis": [],
    "database_tables": [],
    "inputs": [],
    "outputs": [],
    "dependencies": [],
    "side_effects": [
      "Program execution terminates."
    ],
    "requirements": [],
    "comments": [],
    "annotations": {
      "developer_notes": "The `goback` statement signals the end of a subprogram or the main program, returning control to the caller."
    },
    "code": "goback."
  },
  {
    "file": "cloned_repos/Cobol-bank-system\\main.cob",
    "chunk_id": 1,
    "language": "COBOL",
    "feature": "File Closing and Program Termination",
    "description": "Closes an input file and terminates the program.",
    "functions": [],
    "classes": [],
    "apis": [],
    "database_tables": [],
    "inputs": [],
    "outputs": [],
    "dependencies": [],
    "side_effects": [
      "Program execution terminates."
    ],
    "requirements": [
      "IN-PUT file must be opened before it is closed."
    ],
    "comments": [],
    "annotations": {
      "developer_notes": "This code snippet closes the 'IN-PUT' file and then stops the COBOL program. The 'IN-PUT' should have been previously opened. "
    },
    "code": "END-PERFORM.\n           CLOSE IN-PUT.\n           STOP RUN."
  },
  {
    "file": "cloned_repos/Cobol-bank-system\\people.cob",
    "chunk_id": 1,
    "language": "COBOL",
    "feature": "File Closing",
    "description": "Closes the PEOPLE-IN file.",
    "functions": [],
    "classes": [],
    "apis": [],
    "database_tables": [],
    "inputs": [],
    "outputs": [],
    "dependencies": [],
    "side_effects": [],
    "requirements": [
      "PEOPLE-IN file must be open."
    ],
    "comments": [],
    "annotations": {
      "developer_notes": "This code snippet closes the PEOPLE-IN file. It's assumed this file was opened earlier."
    },
    "code": "END-PERFORM.\n           CLOSE PEOPLE-IN."
  },
  {
    "file": "cloned_repos/Cobol-bank-system\\people.cob",
    "chunk_id": 2,
    "language": "COBOL",
    "feature": "Program Termination",
    "description": "Returns control to the calling program or the operating system.",
    "functions": [],
    "classes": [],
    "apis": [],
    "database_tables": [],
    "inputs": [],
    "outputs": [],
    "dependencies": [],
    "side_effects": [
      "Program execution terminates."
    ],
    "requirements": [],
    "comments": [],
    "annotations": {
      "developer_notes": "The `goback` statement signals the end of a subprogram or the main program, returning control to the caller."
    },
    "code": "goback."
  },
  {
    "file": "cloned_repos/Cobol-bank-system\\peopleget.cbl",
    "chunk_id": 1,
    "language": "COBOL",
    "feature": "Data Retrieval and File Operations",
    "description": "Reads data from an input file, retrieves a record from PEOPLE-RW based on CPF, and writes to EXISTS-RW.",
    "functions": [],
    "classes": [],
    "apis": [],
    "database_tables": [
      "PEOPLE-RW",
      "EXISTS-RW"
    ],
    "inputs": [
      "IN-PUT file",
      "WS-CPF"
    ],
    "outputs": [
      "WS-EXSIST",
      "EXISTS-RW-FILE"
    ],
    "dependencies": [],
    "side_effects": [
      "WS-EXSIST is updated based on the read result from PEOPLE-RW.",
      "EXISTS-RW-FILE is created or updated."
    ],
    "requirements": [
      "IN-PUT file must exist.",
      "PEOPLE-RW file must be defined as I-O.",
      "EXISTS-RW file must be defined as EXTEND."
    ],
    "comments": [],
    "annotations": {
      "developer_notes": "The code reads CPF from IN-PUT, then tries to read a record from PEOPLE-RW using CPF as the key. WS-EXSIST indicates whether a matching record exists.  Finally, it writes WS-EXSIST to EXISTS-RW."
    },
    "code": "END-PERFORM.\n           CLOSE IN-PUT.\n           DISPLAY WS-CPF\n           OPEN I-O PEOPLE-RW\n               MOVE WS-CPF TO PEOPLE-RW-CPF\n               READ PEOPLE-RW\n                   KEY IS PEOPLE-RW-CPF\n                   INVALID KEY MOVE \"0\" TO WS-EXSIST\n                   NOT INVALID KEY MOVE \"1\" TO WS-EXSIST\n               END-READ\n           CLOSE PEOPLE-RW.\n           DISPLAY WS-EXSIST\n           OPEN EXTEND EXISTS-RW.\n               MOVE WS-EXSIST TO EXISTS-RW-ERROR\n               WRITE EXISTS-RW-FILE"
  },
  {
    "file": "cloned_repos/Cobol-bank-system\\peopleget.cbl",
    "chunk_id": 2,
    "language": "COBOL",
    "feature": "File Closing",
    "description": "Closes the EXISTS-RW file.",
    "functions": [],
    "classes": [],
    "apis": [],
    "database_tables": [
      "EXISTS-RW"
    ],
    "inputs": [],
    "outputs": [],
    "dependencies": [],
    "side_effects": [],
    "requirements": [
      "EXISTS-RW must be opened."
    ],
    "comments": [],
    "annotations": {
      "developer_notes": "Closes the EXISTS-RW file. The file should have been previously opened."
    },
    "code": "END-WRITE.\n           CLOSE EXISTS-RW."
  },
  {
    "file": "cloned_repos/Cobol-bank-system\\peopleget.cbl",
    "chunk_id": 3,
    "language": "COBOL",
    "feature": "Program Termination",
    "description": "Returns control to the calling program or the operating system.",
    "functions": [],
    "classes": [],
    "apis": [],
    "database_tables": [],
    "inputs": [],
    "outputs": [],
    "dependencies": [],
    "side_effects": [
      "Program execution terminates."
    ],
    "requirements": [],
    "comments": [],
    "annotations": {
      "developer_notes": "The `goback` statement signals the end of a subprogram or the main program, returning control to the caller."
    },
    "code": "goback."
  },
  {
    "file": "cloned_repos/Cobol-bank-system\\peopleLogin.cbl",
    "chunk_id": 1,
    "language": "COBOL",
    "feature": "Data Retrieval and File Operations",
    "description": "Reads data from an input file, retrieves a record from PEOPLE-RW based on CPF, and writes to EXISTS-RW.",
    "functions": [],
    "classes": [],
    "apis": [],
    "database_tables": [
      "PEOPLE-RW",
      "EXISTS-RW"
    ],
    "inputs": [
      "IN-PUT file",
      "WS-CPF"
    ],
    "outputs": [
      "WS-EXSIST",
      "EXISTS-RW-FILE"
    ],
    "dependencies": [],
    "side_effects": [
      "WS-EXSIST is updated based on the read result from PEOPLE-RW.",
      "EXISTS-RW-FILE is created or updated."
    ],
    "requirements": [
      "IN-PUT file must exist.",
      "PEOPLE-RW file must be defined as I-O.",
      "EXISTS-RW file must be defined as EXTEND."
    ],
    "comments": [],
    "annotations": {
      "developer_notes": "The code reads CPF from IN-PUT, then tries to read a record from PEOPLE-RW using CPF as the key. WS-EXSIST indicates whether a matching record exists.  Finally, it writes WS-EXSIST to EXISTS-RW."
    },
    "code": "END-PERFORM.\n           CLOSE IN-PUT.\n           DISPLAY WS-CPF\n           OPEN I-O PEOPLE-RW\n               MOVE WS-CPF TO PEOPLE-RW-CPF\n               READ PEOPLE-RW INTO WS-PEOPLE-FILE-IN\n                   KEY IS PEOPLE-RW-CPF\n                   INVALID KEY MOVE \"0\" TO WS-EXSIST\n                   NOT INVALID KEY\n                   MOVE \"1\" TO WS-EXSIST\n               END-READ\n           CLOSE PEOPLE-RW.\n           DISPLAY WS-EXSIST\n           OPEN EXTEND EXISTS-RW.\n               MOVE WS-EXSIST TO EXISTS-RW-ERROR\n               WRITE EXISTS-RW-FILE"
  },
  {
    "file": "cloned_repos/Cobol-bank-system\\peopleLogin.cbl",
    "chunk_id": 2,
    "language": "COBOL",
    "feature": "File Closing",
    "description": "Closes the EXISTS-RW file.",
    "functions": [],
    "classes": [],
    "apis": [],
    "database_tables": [
      "EXISTS-RW"
    ],
    "inputs": [],
    "outputs": [],
    "dependencies": [],
    "side_effects": [],
    "requirements": [
      "EXISTS-RW must be opened."
    ],
    "comments": [],
    "annotations": {
      "developer_notes": "Closes the EXISTS-RW file. The file should have been previously opened."
    },
    "code": "END-WRITE.\n           CLOSE EXISTS-RW."
  },
  {
    "file": "cloned_repos/Cobol-bank-system\\peopleLogin.cbl",
    "chunk_id": 3,
    "language": "COBOL",
    "feature": "Program Termination",
    "description": "Returns control to the calling program or the operating system.",
    "functions": [],
    "classes": [],
    "apis": [],
    "database_tables": [],
    "inputs": [],
    "outputs": [],
    "dependencies": [],
    "side_effects": [
      "Program execution terminates."
    ],
    "requirements": [],
    "comments": [],
    "annotations": {
      "developer_notes": "The `goback` statement signals the end of a subprogram or the main program, returning control to the caller."
    },
    "code": "goback."
  },
  {
    "file": "cloned_repos/Cobol-bank-system\\peopleName.cbl",
    "chunk_id": 1,
    "language": "COBOL",
    "feature": "Data Retrieval and File Operations",
    "description": "Reads data from an input file, retrieves a record from PEOPLE-RW based on CPF, and writes the person's name to EXISTS-RW.",
    "functions": [],
    "classes": [],
    "apis": [],
    "database_tables": [
      "PEOPLE-RW",
      "EXISTS-RW"
    ],
    "inputs": [
      "IN-PUT file",
      "WS-CPF"
    ],
    "outputs": [
      "WS-Nome",
      "EXISTS-RW-FILE"
    ],
    "dependencies": [],
    "side_effects": [
      "WS-Nome is updated based on the read result from PEOPLE-RW.",
      "EXISTS-RW-FILE is created or updated."
    ],
    "requirements": [
      "IN-PUT file must exist.",
      "PEOPLE-RW file must be defined as I-O.",
      "EXISTS-RW file must be defined as EXTEND."
    ],
    "comments": [],
    "annotations": {
      "developer_notes": "The code reads CPF from IN-PUT, then tries to read a record from PEOPLE-RW using CPF as the key. WS-Nome gets the person's name, and then it is written to EXISTS-RW."
    },
    "code": "END-PERFORM.\n           CLOSE IN-PUT.\n           DISPLAY WS-CPF\n           OPEN I-O PEOPLE-RW\n               MOVE WS-CPF TO PEOPLE-RW-CPF\n               READ PEOPLE-RW into WS-PEOPLE-FILE-IN\n                   KEY IS PEOPLE-RW-CPF\n                   INVALID KEY MOVE \"\" TO WS-Nome\n                  NOT INVALID KEY MOVE WS-PEOPLE-FILE-IN-NAME TO WS-Nome\n               END-READ\n           CLOSE PEOPLE-RW.\n           DISPLAY WS-Nome\n           OPEN EXTEND EXISTS-RW.\n               MOVE WS-Nome TO EXISTS-RW-NAME\n               WRITE EXISTS-RW-FILE"
  },
  {
    "file": "cloned_repos/Cobol-bank-system\\peopleName.cbl",
    "chunk_id": 2,
    "language": "COBOL",
    "feature": "File Closing",
    "description": "Closes the EXISTS-RW file.",
    "functions": [],
    "classes": [],
    "apis": [],
    "database_tables": [
      "EXISTS-RW"
    ],
    "inputs": [],
    "outputs": [],
    "dependencies": [],
    "side_effects": [],
    "requirements": [
      "EXISTS-RW must be opened."
    ],
    "comments": [],
    "annotations": {
      "developer_notes": "Closes the EXISTS-RW file. The file should have been previously opened."
    },
    "code": "END-WRITE.\n           CLOSE EXISTS-RW."
  },
  {
    "file": "cloned_repos/Cobol-bank-system\\peopleName.cbl",
    "chunk_id": 3,
    "language": "COBOL",
    "feature": "Program Termination",
    "description": "Returns control to the calling program or the operating system.",
    "functions": [],
    "classes": [],
    "apis": [],
    "database_tables": [],
    "inputs": [],
    "outputs": [],
    "dependencies": [],
    "side_effects": [
      "Program execution terminates."
    ],
    "requirements": [],
    "comments": [],
    "annotations": {
      "developer_notes": "The `goback` statement signals the end of a subprogram or the main program, returning control to the caller."
    },
    "code": "goback."
  },
  {
    "file": "cloned_repos/Cobol-bank-system\\peoplesave.cob",
    "chunk_id": 1,
    "language": "COBOL",
    "feature": "Program Termination",
    "description": "Returns control to the calling program or the operating system.",
    "functions": [],
    "classes": [],
    "apis": [],
    "database_tables": [],
    "inputs": [],
    "outputs": [],
    "dependencies": [],
    "side_effects": [
      "Program execution terminates."
    ],
    "requirements": [],
    "comments": [],
    "annotations": {
      "developer_notes": "The `goback` statement signals the end of a subprogram or the main program, returning control to the caller."
    },
    "code": "goback."
  }
]